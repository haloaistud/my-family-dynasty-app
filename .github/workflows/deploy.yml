name: Deploy Family Dynasty to Vercel

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  JAVA_VERSION: '17'

jobs:
  # Frontend Build and Test
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Run frontend linting
        working-directory: ./frontend
        run: npm run lint
        
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test -- --coverage --watchAll=false
        
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        
      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
          retention-days: 7

  # Backend Build and Test
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
          
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Run backend tests
        working-directory: ./backend
        run: mvn clean test
        
      - name: Generate test coverage report
        working-directory: ./backend
        run: mvn jacoco:report
        
      - name: Build backend JAR
        working-directory: ./backend
        run: mvn clean package -DskipTests
        
      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar
          retention-days: 7
          
      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: backend/target/site/jacoco/jacoco.xml
          flags: backend

  # Security Scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Snyk to check for vulnerabilities (Frontend)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=frontend/package.json
          
      - name: Run Snyk to check for vulnerabilities (Backend)
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=backend/pom.xml

  # Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: family_dynasty_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
          
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Start backend server
        working-directory: ./backend
        run: |
          mvn clean package -DskipTests
          java -jar target/family-dynasty-backend-*.jar &
          echo "BACKEND_PID=$!" >> $GITHUB_ENV
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/family_dynasty_test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: testpassword
          
      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8080/actuator/health; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done
          
      - name: Run Playwright integration tests
        working-directory: ./frontend
        run: |
          npm install -g @playwright/test
          npx playwright install --with-deps
          npm run test:e2e
        env:
          REACT_APP_API_BASE_URL: http://localhost:8080
          
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7
          
      - name: Stop backend server
        if: always()
        run: kill $BACKEND_PID || true

  # Deploy to Vercel (Production)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test, security-scan, integration-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
